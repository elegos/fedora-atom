--- a/bin/apm
+++ /dev/null
@@ -1,63 +0,0 @@
-#!/bin/bash
-
-set -e
-
-initialCwd=`pwd -P`
-scriptDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
-
-apmPath=$0
-builtin cd "`dirname "$apmPath"`"
-binDir=`basename "$apmPath"`
-
-# Detect node binary name
-osName=`uname -s`
-if [ "${osName:0:10}" == 'MINGW32_NT' ]; then
-  nodeBin="node.exe"
-elif [[ $(uname -r) == *-Microsoft ]]; then
-  nodeBin="node.exe"
-else
-  nodeBin="node"
-fi
-
-while [ -L "$binDir" ]
-do
-  binDir=`readlink "$binDir"`
-  builtin cd "`dirname "$binDir"`"
-  binDir=`basename "$binDir"`
-done
-
-binDir=`pwd -P`
-
-maybe_node_gyp_path="$binDir"/../node_modules/.bin/node-gyp
-if [ -e "$maybe_node_gyp_path" ]
-then
-  # Prevent vars like NODE_CONFIG_NODE_GYP from messing this up
-  for var in $(env | grep -i ^npm_config_node_gyp=)
-  do
-    unset ${var%%=*}
-  done
-
-  export npm_config_node_gyp="$maybe_node_gyp_path"
-fi
-
-export ATOM_APM_ORIGINAL_PYTHON="${PYTHON:-}"
-
-# Assumption: env iterates through environment variables in the same order that
-# process.env iterates through properties within npm. So, we take the last match.
-for var in $(env | grep -i ^npm_config_python=)
-do
-  ATOM_APM_ORIGINAL_PYTHON="${var#*=}"
-  unset ${var%%=*}
-done
-
-export npm_config_python="${binDir}/python-interceptor.sh"
-
-cliPath="$binDir/../lib/cli.js"
-if [[ $(uname -r) == *-Microsoft ]]; then
-  cliPath="$(echo $cliPath | sed 's/\/mnt\/\([a-z]*\)\(.*\)/\1:\2/')"
-  cliPath="${cliPath////\\}"
-else
-  builtin cd "$initialCwd"
-fi
-
-"$binDir/$nodeBin" "$cliPath" "$@"
--- a/bin/apm.cmd
+++ /dev/null
@@ -1,24 +0,0 @@
-@echo off
-setlocal enabledelayedexpansion
-
-:: Try to find git.exe in path
-for /f "tokens=*" %%G in ('where git 2^>nul') do set "apm_git_path=%%~dpG"
-if not defined apm_git_path (
-  :: Try to find git.exe in GitHub Desktop, oldest first so we end with newest
-  for /f "tokens=*" %%d in ('dir /b /s /a:d /od "%LOCALAPPDATA%\GitHub\PortableGit*" 2^>nul') do (
-    if exist "%%d\cmd\git.exe" set "apm_git_path=%%d\cmd"
-  )
-  :: Found one, add it to the path
-  if defined apm_git_path set "Path=!apm_git_path!;!PATH!"
-)
-
-set "maybe_node_gyp_path=%~dp0\..\node_modules\node-gyp\bin\node-gyp.js"
-if exist "%maybe_node_gyp_path%" (
-  set "npm_config_node_gyp=%maybe_node_gyp_path%"
-)
-
-if exist "%~dp0\node.exe" (
-  "%~dp0\node.exe" "%~dp0/../lib/cli.js" %*
-) else (
-  node.exe "%~dp0/../lib/cli.js" %*
-)
--- a/bin/npm
+++ /dev/null
@@ -1,32 +0,0 @@
-#!/bin/bash
-SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
-export PATH="$SCRIPT_DIR:$PATH"
-
-export ATOM_APM_ORIGINAL_PYTHON="${PYTHON:-}"
-
-# Assumption: env iterates through environment variables in the same order that
-# process.env iterates through properties within npm. So, we take the last match.
-for var in $(env | grep -i ^npm_config_python=)
-do
-  ATOM_APM_ORIGINAL_PYTHON="${var#*=}"
-done
-if [ -z "${ATOM_APM_ORIGINAL_PYTHON}" ] && [ -n "${PYTHON:-}" ]
-then
-  ATOM_APM_ORIGINAL_PYTHON="${PYTHON}"
-fi
-
-export npm_config_python="${SCRIPT_DIR}/python-interceptor.sh"
-
-maybe_node_gyp_path="$SCRIPT_DIR"/../node_modules/.bin/node-gyp
-if [ -e "$maybe_node_gyp_path" ]
-then
-  # Prevent vars like NODE_CONFIG_NODE_GYP from messing this up
-  for var in $(env | grep -i ^npm_config_node_gyp=)
-  do
-    unset ${var%%=*}
-  done
-
-  export npm_config_node_gyp="$maybe_node_gyp_path"
-fi
-
-"$SCRIPT_DIR"/../node_modules/.bin/npm $@
--- a/bin/npm.cmd
+++ /dev/null
@@ -1,9 +0,0 @@
-@echo off
-setlocal EnableDelayedExpansion
-
-set "PATH=%~dp0;%PATH%"
-set "maybe_node_gyp_path=%~dp0\..\node_modules\node-gyp\bin\node-gyp.js"
-if exist "%maybe_node_gyp_path%" (
-  set "npm_config_node_gyp=%maybe_node_gyp_path%"
-)
-"%~dp0\..\node_modules\.bin\npm.cmd" %*
--- a/src/cli.coffee
+++ /dev/null
@@ -1,6 +0,0 @@
-apm = require './apm-cli'
-
-process.title = 'apm'
-
-apm.run process.argv.slice(2), (error) ->
-  process.exitCode = if error? then 1 else 0
